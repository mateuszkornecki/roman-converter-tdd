{"version":3,"sources":["toRoman.js","RomanConverter.js","App.js","index.js"],"names":["toRoman","arabic","roman","i","push","join","RomanConverter","state","handleChange","event","parseInt","target","value","setState","onChange","this","type","React","Component","App","className","ReactDOM","render","document","getElementById"],"mappings":"+RAAMA,EAAU,SAAVA,EAAWC,GACb,IAAIC,EAAQ,GACZ,QAAQ,GACJ,KAAMD,EAAS,GAAKA,EAAS,EACzB,IAAK,IAAIE,EAAI,EAAGF,EAASE,EAAI,EAAGA,IAC5BD,EAAME,KAAK,KAEf,MACJ,KAAKH,GAAU,GAAKA,EAAS,EACzBC,EAAQ,CAACF,EAAQ,EAAIC,GAAS,KAC9B,MACJ,KAAKA,GAAU,GAAKA,EAAS,EACzBC,EAAQ,CAAC,IAAKF,EAAQC,EAAS,IAC/B,MACJ,KAAKA,GAAU,GAAKA,EAAS,GACzBC,EAAQ,CAACF,EAAQ,GAAKC,GAAS,KAC/B,MACJ,KAAKA,EAAS,IAAMA,EAAS,GACzBC,EAAQ,CAAC,IAAKF,EAAQC,EAAS,KAC/B,MACJ,KAAKA,GAAU,IAAMA,EAAS,GAC1BC,EAAQ,CAAC,KAAMF,EAAQC,EAAS,KAChC,MACJ,KAAKA,GAAU,IAAMA,EAAS,GAC1BC,EAAQ,CAAC,KAAMF,EAAQC,EAAS,GAAK,KACrC,MACJ,KAAKA,GAAU,IAAMA,EAAS,GAC1BC,EAAQ,CAAC,IAAKF,EAAQC,EAAS,KAC/B,MACJ,KAAKA,GAAU,IAAMA,EAAS,IAC1BC,EAAQ,CAAC,KAAMF,EAAQC,EAAS,GAAK,MACrC,MACJ,KAAKA,GAAU,KAAOA,EAAS,IAC3BC,EAAQ,CAAC,IAAKF,EAAQC,EAAS,MAC/B,MACJ,KAAKA,GAAU,KAAOA,EAAS,IAC3BC,EAAQ,CAAC,KAAMF,EAAQC,EAAS,IAAM,MACtC,MACJ,KAAKA,GAAU,KAAOA,EAAS,IAC3BC,EAAQ,CAAC,IAAKF,EAAQC,EAAS,MAC/B,MACJ,KAAKA,GAAU,KAAOA,EAAS,IAC3BC,EAAQ,CAAC,KAAMF,EAAQC,EAAS,IAAM,MACtC,MACJ,KAAKA,GAAU,KAAQA,EAAS,IAC5BC,EAAQ,CAAC,IAAKF,EAAQC,EAAS,MAC/B,MACJ,QACI,OAAO,KAEf,OAAOC,EAAMG,KAAK,KCxBPC,G,iNArBXC,MAAQ,CACJL,MAAO,M,EAGXM,aAAe,SAACC,GACZ,IAAMR,EAASS,SAASD,EAAME,OAAOC,MAAO,IACxCH,EAAME,OAAOC,OACb,EAAKC,SAAS,CAAEX,MAAOF,EAAQC,M,wEAKnC,OACI,oCACI,yCAAc,2BAAOa,SAAUC,KAAKP,aAAcQ,KAAK,YACvD,sCAAW,8BAAOD,KAAKR,MAAML,MAAQa,KAAKR,MAAML,MAAQ,c,GAhB3Ce,IAAMC,YCQpBC,MARf,WACI,OACI,yBAAKC,UAAU,OACX,kBAAC,EAAD,QCFZC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.4ce39c52.chunk.js","sourcesContent":["const toRoman = (arabic) => {\n    let roman = [];\n    switch (true) {\n        case (arabic > 0 && arabic < 4):\n            for (let i = 0; arabic - i > 0; i++) {\n                roman.push(\"I\");\n            }\n            break;\n        case arabic >= 4 && arabic < 5:\n            roman = [toRoman(5 - arabic), \"V\"];\n            break;\n        case arabic >= 5 && arabic < 9:\n            roman = [\"V\", toRoman(arabic - 5)];\n            break;\n        case arabic >= 9 && arabic < 11:\n            roman = [toRoman(10 - arabic), \"X\"];\n            break;\n        case arabic > 11 && arabic < 20:\n            roman = [\"X\", toRoman(arabic - 10)];\n            break;\n        case arabic >= 20 && arabic < 40:\n            roman = [\"XX\", toRoman(arabic - 20)];\n            break;\n        case arabic >= 40 && arabic < 50:\n            roman = [\"XL\", toRoman(arabic + 10 - 50)];\n            break;\n        case arabic >= 50 && arabic < 90:\n            roman = [\"L\", toRoman(arabic - 50)];\n            break;\n        case arabic >= 90 && arabic < 100:\n            roman = [\"XC\", toRoman(arabic + 10 - 100)];\n            break;\n        case arabic >= 100 && arabic < 400:\n            roman = [\"C\", toRoman(arabic - 100)];\n            break;\n        case arabic >= 400 && arabic < 500:\n            roman = [\"CD\", toRoman(arabic + 100 - 500)];\n            break;\n        case arabic >= 500 && arabic < 900:\n            roman = [\"D\", toRoman(arabic - 500)];\n            break;\n        case arabic >= 900 && arabic < 1000:\n            roman = [\"CM\", toRoman(arabic + 100 - 1000)];\n            break;\n        case arabic >= 1000 && arabic < 4000:\n            roman = [\"M\", toRoman(arabic - 1000)];\n            break;\n        default:\n            return null;\n    }\n    return roman.join('');\n}\n\nexport { toRoman };","import React from 'react';\nimport { toRoman } from './toRoman';\nimport './RomanConverter.css';\n\nclass RomanConverter extends React.Component {\n    state = {\n        roman: null\n    }\n\n    handleChange = (event) => {\n        const arabic = parseInt(event.target.value, 10);\n        if (event.target.value) {\n            this.setState({ roman: toRoman(arabic) })\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <label>Arabic:<input onChange={this.handleChange} type=\"number\" /></label>\n                <h1>Roman: <mark>{this.state.roman ? this.state.roman : \"none\"}</mark></h1>\n            </>\n        )\n    }\n}\n\nexport default RomanConverter;","import React from 'react';\nimport './App.css';\nimport RomanConverter from \"./RomanConverter\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <RomanConverter />\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}