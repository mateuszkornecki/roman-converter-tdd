{"version":3,"sources":["toRoman.js","RomanConverter.js","App.js","index.js"],"names":["toRoman","arabic","initialValue","roman","uniquePairs","2000","1000","900","500","400","100","90","50","40","20","10","9","5","4","3","2","1","arabicNumbers","Object","keys","reverse","romanNumbers","values","forEach","number","index","push","join","RomanConverter","state","handleChange","event","parseInt","target","value","setState","onChange","this","type","React","Component","App","className","ReactDOM","render","document","getElementById"],"mappings":"+RAAMA,EAAU,SAACC,GACb,IAAMC,EAAeD,EACjBE,EAAQ,GACNC,EACN,CACIC,IAAM,KACNC,IAAM,IACNC,IAAK,KACLC,IAAK,IACLC,IAAK,KACLC,IAAK,IACLC,GAAI,KACJC,GAAI,IACJC,GAAI,KACJC,GAAI,KACJC,GAAI,IACJC,EAAG,KACHC,EAAG,IACHC,EAAG,KACHC,EAAG,MACHC,EAAG,KACHC,EAAG,KAGDC,EAAgBC,OAAOC,KAAKpB,GAAaqB,UACzCC,EAAeH,OAAOI,OAAOvB,GAAaqB,UAUhD,OARAH,EAAcM,SAAQ,SAACC,EAAQC,GAC3B,GAAI7B,EAAS4B,GAAU,EACnB,KAAO5B,EAAS4B,GAAU,GACtB1B,EAAM4B,KAAKL,EAAaI,IACxB7B,GAAkB4B,KAItB3B,GAAgB,EAAK,KAAQA,GAAgB,IAAQ,6BAA+BC,EAAM6B,KAAK,KCT5FC,G,iNArBXC,MAAQ,CACJ/B,MAAO,M,EAGXgC,aAAe,SAACC,GACZ,IAAMnC,EAASoC,SAASD,EAAME,OAAOC,MAAO,IACxCH,EAAME,OAAOC,OACb,EAAKC,SAAS,CAAErC,MAAOH,EAAQC,M,wEAKnC,OACI,oCACI,yCAAc,2BAAOwC,SAAUC,KAAKP,aAAcQ,KAAK,YACvD,sCAAW,8BAAOD,KAAKR,MAAM/B,MAAQuC,KAAKR,MAAM/B,MAAQ,c,GAhB3CyC,IAAMC,YCQpBC,MARf,WACI,OACI,yBAAKC,UAAU,OACX,kBAAC,EAAD,QCFZC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.e57f5c90.chunk.js","sourcesContent":["const toRoman = (arabic) => {\n    const initialValue = arabic;\n    let roman = [];\n    const uniquePairs =\n    {\n        2000: \"MM\",\n        1000: \"M\",\n        900: \"CM\",\n        500: \"D\",\n        400: \"CD\",\n        100: \"C\",\n        90: \"XC\",\n        50: \"L\",\n        40: \"XL\",\n        20: \"XX\",\n        10: \"X\",\n        9: \"IX\",\n        5: \"V\",\n        4: \"IV\",\n        3: \"III\",\n        2: \"II\",\n        1: \"I\"\n    }\n\n    const arabicNumbers = Object.keys(uniquePairs).reverse();\n    const romanNumbers = Object.values(uniquePairs).reverse();\n\n    arabicNumbers.forEach((number, index) => {\n        if (arabic - number >= 0) {\n            while (arabic - number >= 0) {\n                roman.push(romanNumbers[index]);\n                arabic = arabic - number;\n            }\n        }\n    })\n    return (initialValue <= 0) ? null : (initialValue >= 4000) ? \"please enter number < 4000\" : roman.join('');\n}\n\nexport { toRoman };","import React from 'react';\nimport { toRoman } from './toRoman';\nimport './RomanConverter.css';\n\nclass RomanConverter extends React.Component {\n    state = {\n        roman: null\n    }\n\n    handleChange = (event) => {\n        const arabic = parseInt(event.target.value, 10);\n        if (event.target.value) {\n            this.setState({ roman: toRoman(arabic) })\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <label>Arabic:<input onChange={this.handleChange} type=\"number\" /></label>\n                <h1>Roman: <mark>{this.state.roman ? this.state.roman : \"none\"}</mark></h1>\n            </>\n        )\n    }\n}\n\nexport default RomanConverter;","import React from 'react';\nimport './App.css';\nimport RomanConverter from \"./RomanConverter\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <RomanConverter />\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}